[2025-06-08T13:33:32.703+0000] {local_task_job_runner.py:120} INFO - ::group::Pre task execution logs
[2025-06-08T13:33:32.760+0000] {taskinstance.py:2076} INFO - Dependencies all met for dep_context=non-requeueable deps ti=<TaskInstance: incremental_data_processor.create_employees_table scheduled__2025-06-08T12:00:00+00:00 [queued]>
[2025-06-08T13:33:32.775+0000] {taskinstance.py:2076} INFO - Dependencies all met for dep_context=requeueable deps ti=<TaskInstance: incremental_data_processor.create_employees_table scheduled__2025-06-08T12:00:00+00:00 [queued]>
[2025-06-08T13:33:32.776+0000] {taskinstance.py:2306} INFO - Starting attempt 1 of 3
[2025-06-08T13:33:32.810+0000] {taskinstance.py:2330} INFO - Executing <Task(PostgresOperator): create_employees_table> on 2025-06-08 12:00:00+00:00
[2025-06-08T13:33:32.817+0000] {standard_task_runner.py:63} INFO - Started process 2608 to run task
[2025-06-08T13:33:32.823+0000] {standard_task_runner.py:90} INFO - Running: ['***', 'tasks', 'run', 'incremental_data_processor', 'create_employees_table', 'scheduled__2025-06-08T12:00:00+00:00', '--job-id', '139', '--raw', '--subdir', 'DAGS_FOLDER/incremental_data_processor.py', '--cfg-path', '/tmp/tmp3atvogjk']
[2025-06-08T13:33:32.827+0000] {standard_task_runner.py:91} INFO - Job 139: Subtask create_employees_table
[2025-06-08T13:33:32.954+0000] {task_command.py:426} INFO - Running <TaskInstance: incremental_data_processor.create_employees_table scheduled__2025-06-08T12:00:00+00:00 [running]> on host 6211e2649837
[2025-06-08T13:33:33.128+0000] {taskinstance.py:2648} INFO - Exporting env vars: AIRFLOW_CTX_DAG_EMAIL='admin@company.com' AIRFLOW_CTX_DAG_OWNER='***' AIRFLOW_CTX_DAG_ID='incremental_data_processor' AIRFLOW_CTX_TASK_ID='create_employees_table' AIRFLOW_CTX_EXECUTION_DATE='2025-06-08T12:00:00+00:00' AIRFLOW_CTX_TRY_NUMBER='1' AIRFLOW_CTX_DAG_RUN_ID='scheduled__2025-06-08T12:00:00+00:00'
[2025-06-08T13:33:33.133+0000] {taskinstance.py:430} INFO - ::endgroup::
[2025-06-08T13:33:33.159+0000] {sql.py:276} INFO - Executing: 
        CREATE TABLE IF NOT EXISTS employees (
            employee_id SERIAL PRIMARY KEY,
            first_name VARCHAR(50),
            last_name VARCHAR(50),
            age INTEGER,
            gender VARCHAR(10),
            email VARCHAR(100) UNIQUE,
            phone VARCHAR(20),
            address VARCHAR(200),
            city VARCHAR(50),
            state VARCHAR(2),
            zip_code VARCHAR(10),
            country VARCHAR(50),
            hire_date DATE,
            department VARCHAR(50),
            job_title VARCHAR(50),
            salary DECIMAL(10,2),
            bonus_percentage DECIMAL(5,2),
            years_experience INTEGER,
            education_level VARCHAR(50),
            performance_rating DECIMAL(3,2),
            satisfaction_score DECIMAL(3,2),
            attendance_rate DECIMAL(5,2),
            training_hours INTEGER,
            certifications INTEGER,
            is_manager BOOLEAN,
            team_size INTEGER,
            remote_work_days INTEGER,
            marital_status VARCHAR(20),
            dependents INTEGER,
            emergency_contact VARCHAR(100),
            created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
            updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
            is_active BOOLEAN DEFAULT TRUE
        );
        
        CREATE INDEX IF NOT EXISTS idx_employees_department ON employees(department);
        CREATE INDEX IF NOT EXISTS idx_employees_hire_date ON employees(hire_date);
        CREATE INDEX IF NOT EXISTS idx_employees_email ON employees(email);
    
[2025-06-08T13:33:33.177+0000] {base.py:84} INFO - Using connection ID 'write_to_psql' for task execution.
[2025-06-08T13:33:33.201+0000] {base.py:84} INFO - Using connection ID 'write_to_psql' for task execution.
[2025-06-08T13:33:33.209+0000] {sql.py:470} INFO - Running statement: 
        CREATE TABLE IF NOT EXISTS employees (
            employee_id SERIAL PRIMARY KEY,
            first_name VARCHAR(50),
            last_name VARCHAR(50),
            age INTEGER,
            gender VARCHAR(10),
            email VARCHAR(100) UNIQUE,
            phone VARCHAR(20),
            address VARCHAR(200),
            city VARCHAR(50),
            state VARCHAR(2),
            zip_code VARCHAR(10),
            country VARCHAR(50),
            hire_date DATE,
            department VARCHAR(50),
            job_title VARCHAR(50),
            salary DECIMAL(10,2),
            bonus_percentage DECIMAL(5,2),
            years_experience INTEGER,
            education_level VARCHAR(50),
            performance_rating DECIMAL(3,2),
            satisfaction_score DECIMAL(3,2),
            attendance_rate DECIMAL(5,2),
            training_hours INTEGER,
            certifications INTEGER,
            is_manager BOOLEAN,
            team_size INTEGER,
            remote_work_days INTEGER,
            marital_status VARCHAR(20),
            dependents INTEGER,
            emergency_contact VARCHAR(100),
            created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
            updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
            is_active BOOLEAN DEFAULT TRUE
        );
        
        CREATE INDEX IF NOT EXISTS idx_employees_department ON employees(department);
        CREATE INDEX IF NOT EXISTS idx_employees_hire_date ON employees(hire_date);
        CREATE INDEX IF NOT EXISTS idx_employees_email ON employees(email);
    , parameters: None
[2025-06-08T13:33:33.213+0000] {taskinstance.py:441} INFO - ::group::Post task execution logs
[2025-06-08T13:33:33.230+0000] {taskinstance.py:1206} INFO - Marking task as SUCCESS. dag_id=incremental_data_processor, task_id=create_employees_table, run_id=scheduled__2025-06-08T12:00:00+00:00, execution_date=20250608T120000, start_date=20250608T133332, end_date=20250608T133333
[2025-06-08T13:33:33.257+0000] {local_task_job_runner.py:240} INFO - Task exited with return code 0
[2025-06-08T13:33:33.275+0000] {local_task_job_runner.py:222} INFO - ::endgroup::
