[2025-06-08T12:24:46.893+0000] {local_task_job_runner.py:120} INFO - ::group::Pre task execution logs
[2025-06-08T12:24:46.939+0000] {taskinstance.py:2076} INFO - Dependencies all met for dep_context=non-requeueable deps ti=<TaskInstance: incremental_data_processor.create_products_table scheduled__2025-06-08T11:00:00+00:00 [queued]>
[2025-06-08T12:24:46.952+0000] {taskinstance.py:2076} INFO - Dependencies all met for dep_context=requeueable deps ti=<TaskInstance: incremental_data_processor.create_products_table scheduled__2025-06-08T11:00:00+00:00 [queued]>
[2025-06-08T12:24:46.953+0000] {taskinstance.py:2306} INFO - Starting attempt 1 of 3
[2025-06-08T12:24:46.972+0000] {taskinstance.py:2330} INFO - Executing <Task(PostgresOperator): create_products_table> on 2025-06-08 11:00:00+00:00
[2025-06-08T12:24:46.979+0000] {standard_task_runner.py:63} INFO - Started process 2164 to run task
[2025-06-08T12:24:46.993+0000] {standard_task_runner.py:90} INFO - Running: ['***', 'tasks', 'run', 'incremental_data_processor', 'create_products_table', 'scheduled__2025-06-08T11:00:00+00:00', '--job-id', '108', '--raw', '--subdir', 'DAGS_FOLDER/incremental_data_processor.py', '--cfg-path', '/tmp/tmpgdthzfad']
[2025-06-08T12:24:46.997+0000] {standard_task_runner.py:91} INFO - Job 108: Subtask create_products_table
[2025-06-08T12:24:47.069+0000] {task_command.py:426} INFO - Running <TaskInstance: incremental_data_processor.create_products_table scheduled__2025-06-08T11:00:00+00:00 [running]> on host 6211e2649837
[2025-06-08T12:24:47.187+0000] {taskinstance.py:2648} INFO - Exporting env vars: AIRFLOW_CTX_DAG_EMAIL='admin@company.com' AIRFLOW_CTX_DAG_OWNER='***' AIRFLOW_CTX_DAG_ID='incremental_data_processor' AIRFLOW_CTX_TASK_ID='create_products_table' AIRFLOW_CTX_EXECUTION_DATE='2025-06-08T11:00:00+00:00' AIRFLOW_CTX_TRY_NUMBER='1' AIRFLOW_CTX_DAG_RUN_ID='scheduled__2025-06-08T11:00:00+00:00'
[2025-06-08T12:24:47.190+0000] {taskinstance.py:430} INFO - ::endgroup::
[2025-06-08T12:24:47.207+0000] {sql.py:276} INFO - Executing: 
        CREATE TABLE IF NOT EXISTS products (
            product_id VARCHAR(20) PRIMARY KEY,
            sku VARCHAR(20) UNIQUE,
            product_name VARCHAR(200),
            category VARCHAR(50),
            brand VARCHAR(50),
            description TEXT,
            unit_price DECIMAL(10,2),
            cost_price DECIMAL(10,2),
            quantity_in_stock INTEGER,
            reorder_level INTEGER,
            reorder_quantity INTEGER,
            warehouse_location VARCHAR(50),
            supplier VARCHAR(50),
            weight_kg DECIMAL(10,2),
            dimensions_cm VARCHAR(50),
            condition VARCHAR(50),
            manufactured_date DATE,
            expiry_date DATE,
            last_restocked TIMESTAMP,
            units_sold_30days INTEGER DEFAULT 0,
            units_sold_90days INTEGER DEFAULT 0,
            units_sold_365days INTEGER DEFAULT 0,
            rating DECIMAL(3,2),
            review_count INTEGER DEFAULT 0,
            is_active BOOLEAN DEFAULT TRUE,
            discount_percentage DECIMAL(5,2) DEFAULT 0,
            tax_rate DECIMAL(5,2),
            shipping_class VARCHAR(50),
            country_of_origin VARCHAR(50),
            barcode VARCHAR(50) UNIQUE,
            minimum_age INTEGER DEFAULT 0,
            created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
            updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
        );
        
        CREATE INDEX IF NOT EXISTS idx_products_category ON products(category);
        CREATE INDEX IF NOT EXISTS idx_products_brand ON products(brand);
        CREATE INDEX IF NOT EXISTS idx_products_sku ON products(sku);
    
[2025-06-08T12:24:47.218+0000] {base.py:84} INFO - Using connection ID 'write_to_psql' for task execution.
[2025-06-08T12:24:47.232+0000] {base.py:84} INFO - Using connection ID 'write_to_psql' for task execution.
[2025-06-08T12:24:47.238+0000] {sql.py:470} INFO - Running statement: 
        CREATE TABLE IF NOT EXISTS products (
            product_id VARCHAR(20) PRIMARY KEY,
            sku VARCHAR(20) UNIQUE,
            product_name VARCHAR(200),
            category VARCHAR(50),
            brand VARCHAR(50),
            description TEXT,
            unit_price DECIMAL(10,2),
            cost_price DECIMAL(10,2),
            quantity_in_stock INTEGER,
            reorder_level INTEGER,
            reorder_quantity INTEGER,
            warehouse_location VARCHAR(50),
            supplier VARCHAR(50),
            weight_kg DECIMAL(10,2),
            dimensions_cm VARCHAR(50),
            condition VARCHAR(50),
            manufactured_date DATE,
            expiry_date DATE,
            last_restocked TIMESTAMP,
            units_sold_30days INTEGER DEFAULT 0,
            units_sold_90days INTEGER DEFAULT 0,
            units_sold_365days INTEGER DEFAULT 0,
            rating DECIMAL(3,2),
            review_count INTEGER DEFAULT 0,
            is_active BOOLEAN DEFAULT TRUE,
            discount_percentage DECIMAL(5,2) DEFAULT 0,
            tax_rate DECIMAL(5,2),
            shipping_class VARCHAR(50),
            country_of_origin VARCHAR(50),
            barcode VARCHAR(50) UNIQUE,
            minimum_age INTEGER DEFAULT 0,
            created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
            updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
        );
        
        CREATE INDEX IF NOT EXISTS idx_products_category ON products(category);
        CREATE INDEX IF NOT EXISTS idx_products_brand ON products(brand);
        CREATE INDEX IF NOT EXISTS idx_products_sku ON products(sku);
    , parameters: None
[2025-06-08T12:24:47.241+0000] {taskinstance.py:441} INFO - ::group::Post task execution logs
[2025-06-08T12:24:47.252+0000] {taskinstance.py:1206} INFO - Marking task as SUCCESS. dag_id=incremental_data_processor, task_id=create_products_table, run_id=scheduled__2025-06-08T11:00:00+00:00, execution_date=20250608T110000, start_date=20250608T122446, end_date=20250608T122447
[2025-06-08T12:24:47.292+0000] {local_task_job_runner.py:240} INFO - Task exited with return code 0
[2025-06-08T12:24:47.308+0000] {local_task_job_runner.py:222} INFO - ::endgroup::
