[2025-06-08T15:00:02.637+0000] {local_task_job_runner.py:120} INFO - ::group::Pre task execution logs
[2025-06-08T15:00:02.703+0000] {taskinstance.py:2076} INFO - Dependencies all met for dep_context=non-requeueable deps ti=<TaskInstance: incremental_data_processor.create_healthcare_records_table scheduled__2025-06-08T14:00:00+00:00 [queued]>
[2025-06-08T15:00:02.718+0000] {taskinstance.py:2076} INFO - Dependencies all met for dep_context=requeueable deps ti=<TaskInstance: incremental_data_processor.create_healthcare_records_table scheduled__2025-06-08T14:00:00+00:00 [queued]>
[2025-06-08T15:00:02.720+0000] {taskinstance.py:2306} INFO - Starting attempt 1 of 3
[2025-06-08T15:00:02.742+0000] {taskinstance.py:2330} INFO - Executing <Task(PostgresOperator): create_healthcare_records_table> on 2025-06-08 14:00:00+00:00
[2025-06-08T15:00:02.751+0000] {standard_task_runner.py:63} INFO - Started process 1879 to run task
[2025-06-08T15:00:02.756+0000] {standard_task_runner.py:90} INFO - Running: ['***', 'tasks', 'run', 'incremental_data_processor', 'create_healthcare_records_table', 'scheduled__2025-06-08T14:00:00+00:00', '--job-id', '272', '--raw', '--subdir', 'DAGS_FOLDER/incremental_data_processor.py', '--cfg-path', '/tmp/tmp417hypek']
[2025-06-08T15:00:02.763+0000] {standard_task_runner.py:91} INFO - Job 272: Subtask create_healthcare_records_table
[2025-06-08T15:00:02.865+0000] {task_command.py:426} INFO - Running <TaskInstance: incremental_data_processor.create_healthcare_records_table scheduled__2025-06-08T14:00:00+00:00 [running]> on host f6c4201d846e
[2025-06-08T15:00:03.005+0000] {taskinstance.py:2648} INFO - Exporting env vars: AIRFLOW_CTX_DAG_EMAIL='admin@company.com' AIRFLOW_CTX_DAG_OWNER='***' AIRFLOW_CTX_DAG_ID='incremental_data_processor' AIRFLOW_CTX_TASK_ID='create_healthcare_records_table' AIRFLOW_CTX_EXECUTION_DATE='2025-06-08T14:00:00+00:00' AIRFLOW_CTX_TRY_NUMBER='1' AIRFLOW_CTX_DAG_RUN_ID='scheduled__2025-06-08T14:00:00+00:00'
[2025-06-08T15:00:03.007+0000] {taskinstance.py:430} INFO - ::endgroup::
[2025-06-08T15:00:03.026+0000] {sql.py:276} INFO - Executing: 
        CREATE TABLE IF NOT EXISTS healthcare_records (
            patient_id VARCHAR(20) PRIMARY KEY,
            admission_date DATE,
            discharge_date DATE,
            patient_name VARCHAR(100),
            date_of_birth DATE,
            age INTEGER,
            gender VARCHAR(20),
            blood_type VARCHAR(5),
            height_cm INTEGER,
            weight_kg DECIMAL(5,2),
            bmi DECIMAL(4,2),
            department VARCHAR(50),
            primary_diagnosis VARCHAR(200),
            secondary_diagnosis VARCHAR(200),
            attending_physician VARCHAR(100),
            referring_physician VARCHAR(100),
            procedures_performed TEXT,
            medications_prescribed TEXT,
            lab_results TEXT,
            vital_signs TEXT,
            insurance_provider VARCHAR(50),
            insurance_id VARCHAR(20),
            copay_amount DECIMAL(10,2),
            total_charges DECIMAL(12,2),
            insurance_covered DECIMAL(12,2),
            patient_balance DECIMAL(12,2),
            admission_type VARCHAR(20),
            discharge_disposition VARCHAR(50),
            length_of_stay_days INTEGER,
            readmission_risk VARCHAR(20),
            patient_satisfaction DECIMAL(3,2),
            follow_up_required BOOLEAN DEFAULT TRUE,
            created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
        );
        
        CREATE INDEX IF NOT EXISTS idx_health_admission ON healthcare_records(admission_date);
        CREATE INDEX IF NOT EXISTS idx_health_patient ON healthcare_records(patient_id);
        CREATE INDEX IF NOT EXISTS idx_health_department ON healthcare_records(department);
    
[2025-06-08T15:00:03.042+0000] {base.py:84} INFO - Using connection ID 'write_to_psql' for task execution.
[2025-06-08T15:00:03.059+0000] {base.py:84} INFO - Using connection ID 'write_to_psql' for task execution.
[2025-06-08T15:00:03.068+0000] {sql.py:470} INFO - Running statement: 
        CREATE TABLE IF NOT EXISTS healthcare_records (
            patient_id VARCHAR(20) PRIMARY KEY,
            admission_date DATE,
            discharge_date DATE,
            patient_name VARCHAR(100),
            date_of_birth DATE,
            age INTEGER,
            gender VARCHAR(20),
            blood_type VARCHAR(5),
            height_cm INTEGER,
            weight_kg DECIMAL(5,2),
            bmi DECIMAL(4,2),
            department VARCHAR(50),
            primary_diagnosis VARCHAR(200),
            secondary_diagnosis VARCHAR(200),
            attending_physician VARCHAR(100),
            referring_physician VARCHAR(100),
            procedures_performed TEXT,
            medications_prescribed TEXT,
            lab_results TEXT,
            vital_signs TEXT,
            insurance_provider VARCHAR(50),
            insurance_id VARCHAR(20),
            copay_amount DECIMAL(10,2),
            total_charges DECIMAL(12,2),
            insurance_covered DECIMAL(12,2),
            patient_balance DECIMAL(12,2),
            admission_type VARCHAR(20),
            discharge_disposition VARCHAR(50),
            length_of_stay_days INTEGER,
            readmission_risk VARCHAR(20),
            patient_satisfaction DECIMAL(3,2),
            follow_up_required BOOLEAN DEFAULT TRUE,
            created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
        );
        
        CREATE INDEX IF NOT EXISTS idx_health_admission ON healthcare_records(admission_date);
        CREATE INDEX IF NOT EXISTS idx_health_patient ON healthcare_records(patient_id);
        CREATE INDEX IF NOT EXISTS idx_health_department ON healthcare_records(department);
    , parameters: None
[2025-06-08T15:00:03.074+0000] {taskinstance.py:441} INFO - ::group::Post task execution logs
[2025-06-08T15:00:03.088+0000] {taskinstance.py:1206} INFO - Marking task as SUCCESS. dag_id=incremental_data_processor, task_id=create_healthcare_records_table, run_id=scheduled__2025-06-08T14:00:00+00:00, execution_date=20250608T140000, start_date=20250608T150002, end_date=20250608T150003
[2025-06-08T15:00:03.146+0000] {local_task_job_runner.py:240} INFO - Task exited with return code 0
[2025-06-08T15:00:03.268+0000] {local_task_job_runner.py:222} INFO - ::endgroup::
